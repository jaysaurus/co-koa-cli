const bluebird=require("bluebird"),mongoose=require("mongoose"),echoHandler=require("echo-handler");module.exports=function(e){const o=require(`${e}/config/config.json`),n=require(`./i18n/${o.defaultLanguage}.confManMessages.json`),r=require(`${e}/config/Logger.js`),t=n=>{try{return echoHandler.configure({factoryOverride:`${e}/.core/i18n/${o.defaultLanguage}.confManMessages.json`,logger:new r(n)})}catch(e){return}},s=(e,n)=>{const r=o.environment[e];switch(e){case"development":case"test":return mongoose.Promise=bluebird,mongoose.connect(r.mongoDB_URI,{useMongoClient:!0}),r.mongoose=mongoose,r;case process.env.NODE_ENV:return r;default:n.throw("invalidEnv")}};this.build=function(a,i){const g=t(a);if("object"!=typeof g)throw new Error(n&&n.fatalError?n.fatalError:"FATAL: Something went fatally wrong, ConfigManager could not find it's messages AND config.json was not understood. Your Co.Koa installation may have become corrupted.");try{return{env:s(a,g),environment:a,i18n:o.defaultLanguage,logger:new r(a,i),messageFolder:o.messageFolder.replace(/^\.*/,e),root:e,useHBS:o.useHBS}}catch(e){g.throw("failed",e.message)}}};