const Koa=require("koa"),BodyParser=require("koa-bodyparser"),Router=require("koa-router"),Builder=require("./.core/Builder"),ConfigFactory=require("./.core/ConfigManager"),DependencyManager=require("./.core/DependencyManager"),welcome=require("./.core/welcomeMessage"),conf=new ConfigFactory(__dirname).build(process.env.NODE_ENV||"development");try{welcome(conf);const e=new DependencyManager(conf),r=require("./config/hbsConfig");require("./config/bootstrap").bootstrap(e.call);var app=new Koa,router=new Router;if(conf.useHBS){const e=require("koa-hbs-renderer");app.use(e(r(conf)))}app.use(BodyParser()).use(async(e,r)=>{const o=new Date;e.body=`${o} request received.`,await r();const n=new Date-o;conf.logger.log(`${e.method} ${e.url} - ${n}`)}),new Builder(conf).build("Controller",(r,o)=>{var n=r(e.call);Object.keys(n).forEach(e=>{var r=e.split(" ");try{if(2!==r.length)throw new Error;router[r[0].toLowerCase()]("/"+o+r[1],n[e])}catch(r){conf.logger.log(`failed to generate action "${e}": is your verb valid?'}`)}})}),conf.logger.log(`listening on port ${conf.env.port}`),app.use(router.routes()).use(router.allowedMethods()).listen(conf.env.port)}catch(e){conf.logger.log(e.message?e.message:"something unexpected brought the server down:")}